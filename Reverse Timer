import React, { useState, useEffect } from "react";

function App() {
  const [minutes, setMinutes] = useState(0);
  const [seconds, setSeconds] = useState(0);
  const [running, setRunning] = useState(false);
  const [totalTime, setTotalTime] = useState(0); // total time in seconds

  
  const startTimer = () => {
    const total = parseInt(minutes) * 60 + parseInt(seconds);
    if (total > 0 && !running) {
      setTotalTime(total);
      setRunning(true);
    }
  };

  const resetTimer = () => {
    setRunning(false);
    setMinutes(0);
    setSeconds(0);
    setTotalTime(0);
  };

  // Countdown effect
  useEffect(() => {
    if (!running) return;

    if (totalTime <= 0) {
      setRunning(false);
      return;
    }

    const timer = setInterval(() => {
      setTotalTime((prev) => prev - 1);
    }, 1000);

    return () => clearInterval(timer);
  }, [running, totalTime]);

  
  useEffect(() => {
    const m = Math.floor(totalTime / 60);
    const s = totalTime % 60;
    setMinutes(m);
    setSeconds(s);
  }, [totalTime]);

  return (
    <div style={{ textAlign: "center", padding: "2rem" }}>
      <h2>Reverse Countdown Timer</h2>
      <div style={{ marginBottom: "1rem" }}>
        <input
          type="number"
          value={minutes}
          onChange={(e) => setMinutes(e.target.value)}
          disabled={running}
          placeholder="Minutes"
        />
        :
        <input
          type="number"
          value={seconds}
          onChange={(e) => setSeconds(e.target.value)}
          disabled={running}
          placeholder="Seconds"
        />
      </div>
      <h1>
        {String(minutes).padStart(2, "0")}:{String(seconds).padStart(2, "0")}
      </h1>
      <div>
        <button onClick={startTimer} disabled={running}>
          Start
        </button>
        <button onClick={resetTimer}>Reset</button>
      </div>
    </div>
  );
}

export default App;
